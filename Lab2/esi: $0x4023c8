esi: $0x4023c8
rdi: ?
rbp: holding original rsi: 0x4023c8
rbx: holding original rdi: 0x603d80
call string length, return value %r12d = 10
move rbp to rdi as argumentof 401251
compare result of 401251 to 10 -> should be equal
move content of rbx to edx
test lower one byte of rdx, if == 0
return 0



(gdb) break *0x40128f
(gdb) run answer.txt

(gdb) break explode_bomb
(gdb) break *0x0000000000401499
(gdb) run answer.txt
(gdb) break * 0x000000000040115b
(gdb)



0x4023c8:	86 'V'	101 'e'	114 'r'	98 'b'	111 'o'	115 's'	105 'i'	116 't'
0x4023d0:	121 'y'	32 ' '	108 'l'	101 'e'	97 'a'	100 'd'	115 's'	32 ' '
0x4023d8:	116 't'	111 'o'	32 ' '	117 'u'	110 'n'	99 'c'	108 'l'	101 'e'
0x4023e0:	97 'a'	114 'r'	44 ','	32 ' '	105 'i'	110 'n'	97 'a'	114 'r'
0x4023e8:	116 't'	105 'i'	99 'c'	117 'u'	108 'l'	97 'a'	116 't'	101 'e'
0x4023f0:	32 ' '	116 't'	104 'h'	105 'i'	110 'n'	103 'g'	115 's'	46 '.'

Verbosity leads to unclear, inarticulate things.


rsi: 0x7fffffffe220
rsp: 0x7fffffffe200


mov    $0x4024fc,%esi


  40116c:	8b 44 24 0c          	mov    0xc(%rsp),%eax
  401170:	ff 24 c5 00 24 40 00 	jmpq   *0x402400(,%rax,8)





  cmpl   $0x7,0xc(%rsp)  ==> 2



0x402410:	0x9a	0x11	0x40



								mov    $0x4022a7,%edi
400e14:	e8 9f fc ff ff       	callq  400ab8 <puts@plt>
400e19:	e8 fe 06 00 00       	callq  40151c <read_line>
400e1e:	48 89 c7             	mov    %rax,%rdi
400e21:	e8 bb 02 00 00       	callq  4010e1 <phase_4>
400e26:	e8 46 05 00 00       	callq  401371 <phase_defused>







func4 round 1
	edx = 14   1110
	esi = 0
	edi = 2
func4 round 2


needs to be 57

0x402440 <array.3310>:		2	6	10	1
0x402450 <array.3310+16>:	12	16	9	3
0x402460 <array.3310+32>:	7	4

12 16 9 3 = 28+9+3 = 37+3 = 40
16 1

4 5 6 7 5 3

	14	5
0x402470 <array.3310+48>:	11	8	15	13


6 nodes, each 0x10 bytes

(gdb) x/100bx 0x603700
0x603700 <node6>:	0xa6	0x01	0x00	0x00	0x06	0x00	0x00	0x00
0x603708 <node6+8>:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00

0x603710 <node5>:	0xe5	0x02	0x00	0x00	0x05	0x00	0x00	0x00
0x603718 <node5+8>:	0x00	0x37	0x60	0x00	0x00	0x00	0x00	0x00

0x603720 <node4>:	0x33	0x00	0x00	0x00	0x04	0x00	0x00	0x00
0x603728 <node4+8>:	0x10	0x37	0x60	0x00	0x00	0x00	0x00	0x00

0x603730 <node3>:	0x34	0x02	0x00	0x00	0x03	0x00	0x00	0x00
0x603738 <node3+8>:	0x20	0x37	0x60	0x00	0x00	0x00	0x00	0x00

0x603740 <node2>:	0xd7	0x01	0x00	0x00	0x02	0x00	0x00	0x00
0x603748 <node2+8>:	0x30	0x37	0x60	0x00	0x00	0x00	0x00	0x00

0x603750 <node1>:	0x2d	0x01	0x00	0x00	0x01	0x00	0x00	0x00
0x603758 <node1+8>:	0x40	0x37	0x60	0x00	0x00	0x00	0x00	0x00

Val + next


0x603700 <node6>:	0xa6	0x01	0x00	0x00	0x06	0x00	0x00	0x00
0x603708 <node6+8>:	0x50	0x37	0x60	0x00	0x00	0x00	0x00	0x00
0x603710 <node5>:	0xe5	0x02	0x00	0x00	0x05	0x00	0x00	0x00
0x603718 <node5+8>:	0x20	0x37	0x60	0x00	0x00	0x00	0x00	0x00
0x603720 <node4>:	0x33	0x00	0x00	0x00	0x04	0x00	0x00	0x00
0x603728 <node4+8>:	0x40	0x37	0x60	0x00	0x00	0x00	0x00	0x00
0x603730 <node3>:	0x34	0x02	0x00	0x00	0x03	0x00	0x00	0x00
0x603738 <node3+8>:	0x00	0x37	0x60	0x00	0x00	0x00	0x00	0x00
0x603740 <node2>:	0xd7	0x01	0x00	0x00	0x02	0x00	0x00	0x00
0x603748 <node2+8>:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x603750 <node1>:	0x2d	0x01	0x00	0x00	0x01	0x00	0x00	0x00
0x603758 <node1+8>:	0x10	0x37	0x60	0x00	0x00	0x00	0x00	0x00


12d-2e5-33-1d7-nullptr-???


51-301-422-471-564-741
20  50  00 40   30  10

(gdb) print 0x12d
$20 = 301
(gdb) print 0x1d7
$21 = 471
(gdb) print 0x234
$22 = 564
(gdb) print 0x33
$23 = 51
(gdb) print 0x2e5
$24 = 741
(gdb) print 0x1a6
$25 = 422


(gdb) x/24bx 0x603920    (36)
0x603920 <n1>:		0x24	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x603928 <n1+8>:	0x00	0x39	0x60	0x00	0x00	0x00	0x00	0x00
0x603930 <n1+16>:	0xe0	0x38	0x60	0x00	0x00	0x00	0x00	0x00
(gdb) x/24bx 0x6038e0	 (50)
0x6038e0 <n22>:		0x32	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x6038e8 <n22+8>:	0xa0	0x38	0x60	0x00	0x00	0x00	0x00	0x00
0x6038f0 <n22+16>:	0x60	0x38	0x60	0x00	0x00	0x00	0x00	0x00
(gdb) x/24bx 0x603860    (107)
0x603860 <n34>:		0x6b	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x603868 <n34+8>:	0x00	0x38	0x60	0x00	0x00	0x00	0x00	0x00
0x603870 <n34+16>:	0x60	0x37	0x60	0x00	0x00	0x00	0x00	0x00
(gdb) x/24bx 0x603760    (1001) 
0x603760 <n48>:		0xe9	0x03	0x00	0x00	0x00	0x00	0x00	0x00
0x603768 <n48+8>:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x603770 <n48+16>:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00

break explode_bomb
break *0x0000000000400f08
run a.txt


(gdb) x/64bc 0x4024ae
0x4024ae:	37 '%'	100 'd'	32 ' '	37 '%'	100 'd'	32 ' '	37 '%'	100 'd'
0x4024b6:	32 ' '	37 '%'	100 'd'	32 ' '	37 '%'	100 'd'	32 ' '	37 '%'
0x4024be:	100 'd'	32 ' '	37 '%'	115 's'	0 '\000'	65 'A'	117 'u'	115 's'
0x4024c6:	116 't'	105 'i'	110 'n'	80 'P'	111 'o'	119 'w'	101 'e'	114 'r'
0x4024ce:	115 's'	0 '\000'	10 '\n'	66 'B'	79 'O'	79 'O'	77 'M'	33 '!'
0x4024d6:	33 '!'	33 '!'	0 '\000'	84 'T'	104 'h'	101 'e'	32 ' '	98 'b'
0x4024de:	111 'o'	109 'm'	98 'b'	32 ' '	104 'h'	97 'a'	115 's'	32 ' '
0x4024e6:	98 'b'	108 'l'	111 'o'	119 'w'	110 'n'	32 ' '	117 'u'	112 'p'
(gdb) x/64bc 0x603dd0
0x603dd0 <input_strings+80>:	51 '3'	32 ' '	54 '6'	32 ' '	49 '1'	50 '2'	32 ' 50 '2'
0x603dd8 <input_strings+88>:	52 '4'	32 ' '	52 '4'	56 '8'	32 ' '	57 '9'


Dump of assembler code for function secret_phase:
   0x0000000000400eeb <+0>:	push   %rbx
   0x0000000000400eec <+1>:	callq  0x40151c <read_line>
   0x0000000000400ef1 <+6>:	mov    $0xa,%edx
   0x0000000000400ef6 <+11>:	mov    $0x0,%esi
   0x0000000000400efb <+16>:	mov    %rax,%rdi
   0x0000000000400efe <+19>:	callq  0x400b78 <strtol@plt>
   0x0000000000400f03 <+24>:	mov    %eax,%ebx     
   0x0000000000400f05 <+26>:	lea    -0x1(%rbx),%eax
   0x0000000000400f08 <+29>:	cmp    $0x3e8,%eax
   0x0000000000400f0d <+34>:	jbe    0x400f14 <secret_phase+41>
   0x0000000000400f0f <+36>:	callq  0x401426 <explode_bomb>

check value <= 1001

   0x0000000000400f14 <+41>:	mov    %ebx,%esi    47->esi
   0x0000000000400f16 <+43>:	mov    $0x603920,%edi  a series of nodes with some values
   0x0000000000400f1b <+48>:	callq  0x400eaf <fun7>
   0x0000000000400f20 <+53>:	cmp    $0x1,%eax
   0x0000000000400f23 <+56>:	je     0x400f2a <secret_phase+63>
   0x0000000000400f25 <+58>:	callq  0x401426 <explode_bomb>
   0x0000000000400f2a <+63>:	mov    $0x4023a0,%edi
   0x0000000000400f2f <+68>:	callq  0x400ab8 <puts@plt>
   0x0000000000400f34 <+73>:	callq  0x401371 <phase_defused>
   0x0000000000400f39 <+78>:	pop    %rbx
   0x0000000000400f3a <+79>:	retq   
End of assembler dump.


esi: my value
edi: nodes

Dump of assembler code for function fun7:
   0x0000000000400eaf <+0>:	sub    $0x8,%rsp
   0x0000000000400eb3 <+4>:	mov    $0xffffffff,%eax   eax=-1
   0x0000000000400eb8 <+9>:	test   %rdi,%rdi    
   0x0000000000400ebb <+12>:	je     0x400ee6 <fun7+55>     if rdi=0, return

   0x0000000000400ebd <+14>:	mov    (%rdi),%edx     edx=36
   0x0000000000400ebf <+16>:	cmp    %esi,%edx       edx:esi 36:47
   0x0000000000400ec1 <+18>:	jle    0x400ed0 <fun7+33>   if 36<=37 -> eax=0
   0x0000000000400ec3 <+20>:	mov    0x8(%rdi),%rdi
   0x0000000000400ec7 <+24>:	callq  0x400eaf <fun7>     
   0x0000000000400ecc <+29>:	add    %eax,%eax
   0x0000000000400ece <+31>:	jmp    0x400ee6 <fun7+55>
   0x0000000000400ed0 <+33>:	mov    $0x0,%eax      eax=0
   0x0000000000400ed5 <+38>:	cmp    %esi,%edx      36:47
   0x0000000000400ed7 <+40>:	je     0x400ee6 <fun7+55>
   0x0000000000400ed9 <+42>:	mov    0x10(%rdi),%rdi     rdi+10 no values
   0x0000000000400edd <+46>:	callq  0x400eaf <fun7>
   0x0000000000400ee2 <+51>:	lea    0x1(%rax,%rax,1),%eax    needs to be 1
   0x0000000000400ee6 <+55>:	add    $0x8,%rsp
   0x0000000000400eea <+59>:	retq   
End of assembler dump.


fun7 2:
rdi:0, 


break explode_bomb
break *0x0000000000400f20


Answer:
Verbosity leads to unclear, inarticulate things.
3 6 12 24 48 96 AustinPowers
2 321
2 4
456753
2 4 5 1 6 3
50

